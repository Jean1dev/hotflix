name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: jeanlucafp/hotflix-admin

jobs:
  tests:
    name: Tests runner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK@17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run application tests
        run: ./gradlew test

  front_end:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [17.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd front-admin &&npm install
    - run: export NODE_OPTIONS=--openssl-legacy-provider && npm run build --if-present


  build:
    name: Build runner
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK@17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build da aplicação
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build -x test
      - name: Set BUILD_TAG
        run: |
          echo BUILD_TAG=$(echo ${{ github.head_ref || github.ref_name }} | sed "s,/,_,g")-${{ github.run_number }} >> $GITHUB_ENV
      - name: Print BUILD_TAG defined
        run: |
          echo "Branch     ---> ${{ github.head_ref || github.ref_name }}"
          echo "Run number ---> ${{ github.run_number }}"
          echo "Tag        ---> ${{ env.BUILD_TAG }}"
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PWD }}
      - name: Build & push da imagem do docker
        uses: docker/build-push-action@v3
        with:
          context: .
          #dockerfile: ./devops/Dockerfile
          push: true
          build-args: VERSION=${{ env.BUILD_TAG }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.BUILD_TAG }}

  k8s:
    name: deploy sandbox env
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Definindo o contexto do Kubernetes
        uses: Azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.K8S_CONFIG }}
      - name: Set BUILD_TAG
        run: |
          echo BUILD_TAG=$(echo ${{ github.head_ref || github.ref_name }} | sed "s,/,_,g")-${{ github.run_number }} >> $GITHUB_ENV
      - name: override vars in k8s.yaml
        run : |
          sed -i 's|<DOCKER_IMAGE>|'${{ env.IMAGE_NAME }}:${{ env.BUILD_TAG }}'|g' k8s/deployment.yaml
      - name: Deploy API
        uses: Azure/k8s-deploy@v1.3
        with:
          images: ${{ env.IMAGE_NAME }}:${{ env.BUILD_TAG }}
          manifests: |
            k8s/deployment.yaml
            k8s/service.yaml       
            k8s/keycloack/deployment.yaml
            k8s/keycloack/service.yaml       

